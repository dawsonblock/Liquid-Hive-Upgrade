# Liquid Hive Feedback Loop + Oracle Meta-Loop Orchestration Pipeline
# This configuration defines the complete feedback-to-action pipeline

metadata:
  name: liquid-hive-feedback-oracle-pipeline
  version: "1.0.0"
  description: "End-to-end feedback processing and system optimization pipeline"
  
config:
  # Global pipeline settings
  processing_interval_seconds: 300  # Run every 5 minutes
  max_concurrent_pipelines: 3
  failure_retry_attempts: 2
  pipeline_timeout_minutes: 30
  
  # Event handling
  event_batch_size: 500
  event_retention_hours: 72
  
  # Safety and rollback
  require_validation: true
  auto_rollback_on_failure: true
  rollback_timeout_minutes: 5

# Pipeline definition - complete feedback loop
pipeline:
  
  # Stage 1: Data Collection and Ingestion
  - name: collect
    description: "Collect feedback events from multiple sources"
    type: collector
    config:
      sources:
        - name: user_feedback
          type: api_endpoint
          endpoint: "/api/v1/feedback/collect"
          filters: ["feedback.explicit", "feedback.implicit"]
          
        - name: system_metrics
          type: internal_metrics
          components: ["agents.*", "api_gateway", "model_servers"]
          metrics: ["response_time", "success_rate", "error_count", "memory_usage"]
          
        - name: external_feeds
          type: webhook
          endpoints: ["monitoring_alerts", "user_analytics"]
          
        - name: telemetry
          type: event_stream
          topics: ["agent_interactions", "system_events", "performance_data"]
    
    output:
      destination: event_bus.feedback_queue
      format: event_envelope
      
    monitoring:
      success_rate_threshold: 0.95
      processing_time_threshold_ms: 1000
      alert_on_failure: true

  # Stage 2: Analysis and Pattern Detection
  - name: analyze
    description: "Analyze collected events for patterns and insights"
    type: analyzer
    depends_on: [collect]
    
    config:
      input:
        source: event_bus.feedback_queue
        batch_size: 100
        time_window_hours: 24
        
      analysis_modules:
        - name: pattern_detection
          enabled: true
          algorithms: ["performance_degradation", "user_dissatisfaction", "usage_patterns"]
          confidence_threshold: 0.6
          
        - name: statistical_analysis
          enabled: true
          metrics: ["response_time_trends", "success_rate_analysis", "user_satisfaction"]
          significance_level: 0.05
          
        - name: anomaly_detection
          enabled: true
          algorithms: ["isolation_forest", "statistical_outliers"]
          sensitivity: 0.8
          
        - name: nlp_sentiment
          enabled: true
          models: ["sentiment_analysis", "topic_modeling"]
          languages: ["en", "es", "fr"]
          
        - name: drift_detection
          enabled: true
          detection_methods: ["concept_drift", "data_drift"]
          baseline_window_days: 7
          
      output_filters:
        min_confidence: 0.5
        min_evidence_count: 5
        exclude_low_impact: true
    
    output:
      destination: event_bus.analysis_findings
      format: analysis_findings
      
    monitoring:
      processing_time_threshold_seconds: 30
      patterns_found_threshold: 1
      alert_on_no_patterns: false

  # Stage 3: Oracle Decision Making
  - name: decide_oracle
    description: "Generate optimization plans based on analysis findings"
    type: decision_engine
    depends_on: [analyze]
    
    config:
      input:
        source: event_bus.analysis_findings
        
      decision_policies:
        policy_file: policies/oracle_policies.yaml
        
      mutation_strategies:
        - name: performance_optimization
          enabled: true
          triggers: ["performance_degradation", "high_latency"]
          actions: ["prompt_optimization", "model_swap", "memory_tuning"]
          
        - name: satisfaction_improvement
          enabled: true
          triggers: ["user_dissatisfaction", "low_ratings"]
          actions: ["prompt_enhancement", "lora_adaptation", "explanation_mode"]
          
        - name: load_balancing
          enabled: true
          triggers: ["agent_dominance", "underutilization"]
          actions: ["route_redistribution", "capacity_adjustment"]
          
        - name: safety_response
          enabled: true
          priority: highest
          triggers: ["security_alert", "critical_error"]
          actions: ["emergency_rollback", "service_isolation"]
          
      planning_constraints:
        max_mutations_per_hour: 10
        max_concurrent_mutations: 3
        confidence_threshold: 0.7
        require_human_approval: 
          - "model_swap"
          - "lora_apply" 
          - "critical_param_change"
    
    output:
      destination: event_bus.mutation_plans
      format: mutation_plan
      
    monitoring:
      plans_generated_per_hour: 5
      avg_confidence_threshold: 0.7
      alert_on_low_confidence: true

  # Stage 4: Safety Validation and SPEC Gates
  - name: validate
    description: "Comprehensive safety validation of mutation plans"
    type: validator
    depends_on: [decide_oracle]
    
    config:
      input:
        source: event_bus.mutation_plans
        
      validation_steps:
        - name: spec_gate
          type: spec_validation
          enabled: true
          checks: ["policy_compliance", "resource_safety", "concurrency_safety"]
          fail_fast: true
          
        - name: regression_testing
          type: automated_tests
          enabled: true
          test_suites: ["unit_tests", "integration_tests", "api_contracts"]
          coverage_threshold: 0.8
          
        - name: performance_validation
          type: performance_check
          enabled: true
          benchmarks: ["response_time", "throughput", "memory_usage"]
          degradation_threshold: 0.1  # 10% max degradation
          
        - name: security_scan
          type: security_validation
          enabled: true
          scanners: ["vulnerability_scan", "secret_detection", "injection_check"]
          severity_threshold: "medium"
          
        - name: canary_readiness
          type: deployment_check
          enabled: true
          requirements: ["rollback_plan", "monitoring_setup", "health_checks"]
          
      validation_policies:
        require_all_pass: true
        allow_warnings: true
        manual_review_triggers:
          - "high_risk_mutation"
          - "multiple_failures"
          - "security_findings"
          
    output:
      destination: event_bus.validated_plans
      format: validation_result
      
    monitoring:
      validation_pass_rate: 0.8
      avg_validation_time_seconds: 60
      alert_on_security_findings: true

  # Stage 5: Execution and Deployment
  - name: execute
    description: "Execute validated mutation plans with monitoring"
    type: executor
    depends_on: [validate]
    
    config:
      input:
        source: event_bus.validated_plans
        filter: "validation_passed == true"
        
      execution_strategies:
        - name: canary_deployment
          enabled: true
          traffic_percentage: 5  # Start with 5% traffic
          ramp_up_duration_minutes: 30
          success_criteria:
            error_rate_threshold: 0.05
            latency_increase_threshold: 0.2
            
        - name: blue_green_deployment  
          enabled: false  # Alternative strategy
          switch_threshold: 0.95
          
        - name: rolling_update
          enabled: false  # Alternative strategy
          batch_size: 1
          
      execution_monitoring:
        health_check_interval_seconds: 30
        metric_collection_interval_seconds: 10
        rollback_triggers:
          - "error_rate > 0.1"
          - "latency_increase > 0.5" 
          - "manual_trigger"
          
      rollback_configuration:
        auto_rollback: true
        rollback_timeout_minutes: 5
        rollback_verification: true
        
    output:
      destination: event_bus.execution_results
      format: execution_status
      
    monitoring:
      execution_success_rate: 0.9
      avg_execution_time_minutes: 10
      alert_on_rollback: true

  # Stage 6: Monitoring and Learning
  - name: monitor_and_learn
    description: "Monitor results and update learning models"
    type: monitor
    depends_on: [execute]
    
    config:
      input:
        source: event_bus.execution_results
        
      monitoring_modules:
        - name: impact_assessment
          enabled: true
          metrics: ["performance_improvement", "user_satisfaction_change", "error_reduction"]
          measurement_window_hours: 24
          
        - name: effectiveness_tracking
          enabled: true
          track_mutations: true
          track_outcomes: true
          success_criteria: ["improved_metrics", "positive_feedback", "reduced_complaints"]
          
        - name: model_updating
          enabled: true
          update_triggers: ["significant_improvement", "unexpected_failure"]
          learning_algorithms: ["reinforcement_learning", "pattern_update"]
          
      feedback_loop:
        - name: pattern_model_update
          description: "Update pattern detection models based on outcomes"
          frequency: daily
          
        - name: decision_policy_refinement  
          description: "Refine decision policies based on success rates"
          frequency: weekly
          
        - name: safety_threshold_adjustment
          description: "Adjust safety thresholds based on false positive rates"
          frequency: monthly
          
    output:
      destinations:
        - event_bus.learning_updates
        - storage.outcome_history
        - monitoring.dashboards
        
    monitoring:
      learning_update_frequency: daily
      improvement_detection_rate: 0.3
      false_positive_rate: 0.1

  # Stage 7: Reporting and Alerting
  - name: report
    description: "Generate reports and handle alerting"
    type: reporter
    depends_on: [monitor_and_learn]
    
    config:
      reports:
        - name: daily_summary
          schedule: "0 8 * * *"  # 8 AM daily
          content: ["pipeline_health", "optimizations_applied", "performance_trends"]
          recipients: ["ops_team", "product_managers"]
          
        - name: weekly_analysis
          schedule: "0 9 * * 1"  # 9 AM Mondays  
          content: ["deep_analysis", "trend_analysis", "recommendations"]
          recipients: ["engineering_leads", "data_scientists"]
          
        - name: monthly_review
          schedule: "0 10 1 * *"  # 10 AM first of month
          content: ["comprehensive_review", "roi_analysis", "strategic_recommendations"]
          recipients: ["executives", "stakeholders"]
          
      alerting:
        channels: ["slack", "email", "pagerduty"]
        severity_routing:
          critical: ["pagerduty", "slack"]
          high: ["slack", "email"]
          medium: ["email"]
          low: ["dashboard"]
          
        alert_rules:
          - name: pipeline_failure
            condition: "pipeline_stage_failed"
            severity: critical
            
          - name: high_rollback_rate
            condition: "rollback_rate > 0.2"
            severity: high
            
          - name: low_optimization_impact
            condition: "optimization_impact < 0.1"
            severity: medium

# Health checks and monitoring
health_checks:
  pipeline_health:
    check_interval_seconds: 60
    timeout_seconds: 30
    
  component_health:
    services: ["feedback_api", "oracle_api", "event_bus"]
    check_interval_seconds: 30
    
  data_quality:
    metrics: ["event_completeness", "analysis_accuracy", "plan_viability"]
    check_interval_minutes: 15

# Error handling and recovery
error_handling:
  retry_policies:
    transient_failures:
      max_attempts: 3
      backoff_multiplier: 2
      max_backoff_seconds: 60
      
    permanent_failures:
      alert_immediately: true
      skip_stage: false
      manual_intervention: true
      
  circuit_breaker:
    failure_threshold: 5
    recovery_timeout_minutes: 10
    half_open_max_calls: 3
    
  graceful_degradation:
    fallback_policies:
      analysis_failure: "use_baseline_recommendations"
      planning_failure: "apply_conservative_optimizations"
      validation_failure: "require_manual_approval"
      execution_failure: "immediate_rollback"

# Performance and scalability
performance:
  scaling:
    auto_scaling: true
    min_replicas: 1
    max_replicas: 10
    cpu_threshold: 70
    memory_threshold: 80
    
  caching:
    analysis_cache_ttl_hours: 6
    plan_cache_ttl_hours: 2
    validation_cache_ttl_minutes: 30
    
  optimization:
    parallel_processing: true
    batch_optimization: true
    resource_pooling: true

# Security and compliance
security:
  encryption:
    data_at_rest: true
    data_in_transit: true
    
  access_control:
    rbac_enabled: true
    audit_logging: true
    
  compliance:
    data_retention_days: 90
    pii_handling: "anonymize"
    audit_trail: "comprehensive"

# Development and debugging
development:
  debug_mode: false
  verbose_logging: false
  trace_enabled: false
  
  testing:
    dry_run_mode: true
    simulation_mode: false
    mock_external_services: false