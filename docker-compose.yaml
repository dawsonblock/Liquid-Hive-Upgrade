version: '3.8'

services:
  # API service
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: liquid-hive-api
    restart: unless-stopped
    environment:
      - APP_ENV=${APP_ENV:-development}
      - API_PORT=8080
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - CORS_ORIGINS=http://localhost:5173
    ports:
      - "8080:8080"
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./src:/app/src:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - liquid-hive

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: liquid-hive-frontend
    restart: unless-stopped
    environment:
      - VITE_API_BASE=${VITE_API_BASE:-http://localhost:8080}
    ports:
      - "5173:5173"
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - liquid-hive

  # Prometheus monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: liquid-hive-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - liquid-hive

  # Grafana dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: liquid-hive-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      - prometheus
    networks:
      - liquid-hive

  # Optional services (comment out if not needed)
  redis:
    image: redis:7-alpine
    container_name: liquid-hive-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - liquid-hive

  qdrant:
    image: qdrant/qdrant:latest
    container_name: liquid-hive-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - liquid-hive

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  redis_data:
    driver: local
  qdrant_data:
    driver: local

networks:
  liquid-hive:
    driver: bridge