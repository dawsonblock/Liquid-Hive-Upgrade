name: CI

on:
  push:
    branches: [ main, chore/**, feature/** ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Frontend install
        working-directory: frontend
        run: npm ci

      - name: Frontend tests
        working-directory: frontend
        run: npm test -- --ci --passWithNoTests

      - name: Frontend build
        working-directory: frontend
        run: npm run build

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Backend tests (allow failure initially)
        run: pytest -q
        continue-on-error: true

      - name: Helm lint
        uses: azure/setup-helm@v4
      - name: Lint chart
        run: helm lint helm/liquid-hive
      - name: Render chart (dry template)
        run: helm template demo helm/liquid-hive -f helm/liquid-hive/values.yaml > /dev/null

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/liquid-hive
          tags: |
            type=sha,format=long
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Login to GHCR
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image (push on main)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Install cosign
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: sigstore/cosign-installer@v3

      - name: Cosign sign image (keyless)
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          IMAGE="ghcr.io/${{ github.repository_owner }}/liquid-hive"
          # sign latest sha tag from metadata-action output (first tag line)
          TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -n1)
          cosign sign --yes "$TAG"

      - name: Trivy filesystem scan (allow failure initially)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
        continue-on-error: true

      - name: Generate SBOM (Syft)
        uses: anchore/sbom-action@v0.16.0
        with:
          format: spdx-json
          output-file: sbom.spdx.json
      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.spdx.json
