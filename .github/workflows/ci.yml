name: CI
on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install linting tools
        run: |
          python -m pip install --upgrade pip
          pip install ruff mypy
      - name: Run ruff linting
        run: |
          ruff check src/ tests/ --output-format=github
      - name: Run ruff formatting check
        run: |
          ruff format --check src/ tests/

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    services:
      redis:
        image: redis:7-alpine
        ports: ['6379:6379']
      neo4j:
        image: neo4j:5.15
        env:
          NEO4J_AUTH: 'neo4j/test_password'
        ports: ['7687:7687']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install httpx pytest-asyncio pytest-cov
      - name: Run full test suite with coverage
        env:
          ENABLE_ARENA: 'true'
          ENABLE_PLANNER: 'true'
          REDIS_URL: 'redis://localhost:6379/0'
          NEO4J_URI: 'bolt://localhost:7687'
          NEO4J_USER: 'neo4j'
          NEO4J_PASSWORD: 'test_password'
        run: |
          pytest --cov=src --cov-report=xml --cov-report=term-missing --cov-fail-under=70 tests/
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
      - name: Export OpenAPI
        if: matrix.python-version == '3.11'
        run: |
          python scripts/export_openapi.py
      - name: Upload OpenAPI
        if: matrix.python-version == '3.11'
        uses: actions/upload-artifact@v4
        with:
          name: openapi
          path: docs/openapi.json

  security:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python
          queries: security-extended,security-and-quality
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:python"