name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  discover:
    runs-on: ubuntu-latest
    outputs:
      has_cmake: ${{ steps.detect.outputs.has_cmake }}
      has_python: ${{ steps.detect.outputs.has_python }}
      has_node: ${{ steps.detect.outputs.has_node }}
    steps:
      - uses: actions/checkout@v4
      - id: detect
        shell: bash
        run: |
          has_cmake=false
          has_python=false
          has_node=false
          git ls-files | grep -qiE '(^|/)(CMakeLists\.txt|.*\.cmake)$' && has_cmake=true
          git ls-files | grep -qiE '(^|/)(pyproject\.toml|requirements\.txt|setup\.py)$' && has_python=true
          git ls-files | grep -qiE '(^|/)(package\.json)$' && has_node=true
          echo "has_cmake=$has_cmake"   >> $GITHUB_OUTPUT
          echo "has_python=$has_python" >> $GITHUB_OUTPUT
          echo "has_node=$has_node"     >> $GITHUB_OUTPUT

  cmake:
    needs: discover
    if: needs.discover.outputs.has_cmake == 'true'
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build cmake clang lld
      - name: Configure
        run: cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release
      - name: Build
        run: cmake --build build -j
      - name: Unit tests (ctest)
        run: ctest --test-dir build --output-on-failure
      - name: Package
        run: |
          cmake --build build --target package || true
          tar -czf build_artifacts.tgz -C build .
      - uses: actions/upload-artifact@v4
        with:
          name: cmake-artifacts
          path: build_artifacts.tgz
          if-no-files-found: warn

  python:
    needs: discover
    if: needs.discover.outputs.has_python == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint (ruff)
        run: ruff check .
      - name: Format check (ruff)
        run: ruff format --check .
      - name: Type check (mypy)
        run: mypy src/
        continue-on-error: true
      - name: Security scan (bandit)
        run: bandit -r src/ -f json -o bandit-report.json
        continue-on-error: true
      - name: Tests
        run: pytest -q --maxfail=1 --disable-warnings --cov --cov-report=xml
      - uses: actions/upload-artifact@v4
        with:
          name: python-coverage
          path: coverage.xml
          if-no-files-found: warn
      - uses: actions/upload-artifact@v4
        with:
          name: bandit-security-report
          path: bandit-report.json
          if-no-files-found: warn

  node:
    needs: discover
    if: needs.discover.outputs.has_node == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Detect package manager
        id: pm
        run: |
          pm="yarn"  # Enforce yarn as per build hardening requirements
          echo "pm=$pm" >> $GITHUB_OUTPUT
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: 'frontend/yarn.lock'
      - name: Install frontend deps
        run: |
          cd frontend
          yarn install --frozen-lockfile
      - name: Lint
        run: |
          cd frontend
          yarn lint
      - name: Type check
        run: |
          cd frontend
          yarn type-check
      - name: Build
        run: |
          cd frontend
          yarn build
      - name: Test
        run: |
          cd frontend
          yarn test --ci --watchAll=false
      - uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist
          if-no-files-found: warn