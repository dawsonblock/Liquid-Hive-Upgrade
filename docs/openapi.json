{
  "openapi": "3.1.0",
  "info": {
    "title": "Fusion HiveMind Capsule",
    "version": "0.1.7"
  },
  "paths": {
    "/metrics": {
      "get": {
        "summary": "Metrics",
        "operationId": "metrics_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/healthz": {
      "get": {
        "summary": "Healthz",
        "operationId": "healthz_api_healthz_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "boolean"
                  },
                  "type": "object",
                  "title": "Response Healthz Api Healthz Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/vllm/models": {
      "get": {
        "summary": "Vllm Models",
        "description": "Helper endpoint to query vLLM service for loaded models.",
        "operationId": "vllm_models_api_vllm_models_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Vllm Models Api Vllm Models Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/secrets/health": {
      "get": {
        "summary": "Secrets Health",
        "description": "Get secrets manager health status.",
        "operationId": "secrets_health_api_secrets_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Secrets Health Api Secrets Health Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/secrets/exists": {
      "get": {
        "summary": "Secret Exists",
        "description": "Check whether a secret exists (without returning its value).",
        "operationId": "secret_exists_api_secrets_exists_get",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Secret Exists Api Secrets Exists Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/secrets/set": {
      "post": {
        "summary": "Secret Set",
        "description": "Store a secret via the configured secrets provider.\n\nExpected body: { \"name\": string, \"value\": string | object }\n- For provider 'vault': writes to Vault KV (if configured)\n- For provider 'environment': writes to process env and persists to .env\n- For provider 'aws_secrets_manager': returns an error (write not supported here)",
        "operationId": "secret_set_api_secrets_set_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Payload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Secret Set Api Secrets Set Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/approvals": {
      "get": {
        "summary": "List Approvals",
        "operationId": "list_approvals_api_approvals_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response List Approvals Api Approvals Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/approvals/{idx}/approve": {
      "post": {
        "summary": "Approve Proposal",
        "operationId": "approve_proposal_api_approvals__idx__approve_post",
        "parameters": [
          {
            "name": "idx",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Idx"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Approve Proposal Api Approvals  Idx  Approve Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/approvals/{idx}/deny": {
      "post": {
        "summary": "Deny Proposal",
        "operationId": "deny_proposal_api_approvals__idx__deny_post",
        "parameters": [
          {
            "name": "idx",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Idx"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Deny Proposal Api Approvals  Idx  Deny Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/adapters": {
      "get": {
        "summary": "List Adapters",
        "operationId": "list_adapters_api_adapters_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response List Adapters Api Adapters Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/adapters/state": {
      "get": {
        "summary": "Adapters State",
        "operationId": "adapters_state_api_adapters_state_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Adapters State Api Adapters State Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/adapters/promote/{role}": {
      "post": {
        "summary": "Promote Adapter",
        "operationId": "promote_adapter_api_adapters_promote__role__post",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Promote Adapter Api Adapters Promote  Role  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/config/governor": {
      "get": {
        "summary": "Get Governor",
        "operationId": "get_governor_api_config_governor_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Governor Api Config Governor Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Update Governor",
        "operationId": "update_governor_api_config_governor_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Cfg"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Update Governor Api Config Governor Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/trust/policy": {
      "get": {
        "summary": "Get Trust Policy",
        "operationId": "get_trust_policy_api_trust_policy_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Trust Policy Api Trust Policy Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Set Trust Policy",
        "operationId": "set_trust_policy_api_trust_policy_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Cfg"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Set Trust Policy Api Trust Policy Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/trust/score": {
      "post": {
        "summary": "Trust Score",
        "operationId": "trust_score_api_trust_score_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Proposal"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Trust Score Api Trust Score Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/delegate_task": {
      "post": {
        "summary": "Delegate Task",
        "description": "Task Delegation API: Allows one LIQUID-HIVE instance to offload sub-tasks to others.\nInternal-only endpoint for swarm coordination.",
        "operationId": "delegate_task_api_internal_delegate_task_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Task Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Delegate Task Api Internal Delegate Task Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/swarm/status": {
      "get": {
        "summary": "Swarm Status",
        "description": "Get swarm coordination status and node information.",
        "operationId": "swarm_status_api_swarm_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Swarm Status Api Swarm Status Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/providers": {
      "get": {
        "summary": "Get Providers Status",
        "description": "Get status of all DS-Router providers.",
        "operationId": "get_providers_status_api_providers_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Providers Status Api Providers Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/budget/reset": {
      "post": {
        "summary": "Reset Budget",
        "description": "Reset daily budget counters (Admin only).",
        "operationId": "reset_budget_api_admin_budget_reset_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Reset Budget Api Admin Budget Reset Post"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/router/reload-secrets": {
      "post": {
        "summary": "Reload Router Secrets",
        "description": "Reload DS-Router config from environment after secrets update.\n\nRequires x-admin-token header if ADMIN_TOKEN is configured.",
        "operationId": "reload_router_secrets_api_admin_router_reload_secrets_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Reload Router Secrets Api Admin Router Reload Secrets Post"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/providers/qwen/warm": {
      "post": {
        "summary": "Warm Qwen Provider",
        "description": "Warm the Qwen CPU provider by initializing its local model.\n\nRequires x-admin-token header if ADMIN_TOKEN is configured.\nThis triggers the Qwen provider to load its tokenizer/model pipeline in a thread,\nso subsequent requests won't incur the cold-start cost.",
        "operationId": "warm_qwen_provider_api_admin_providers_qwen_warm_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Warm Qwen Provider Api Admin Providers Qwen Warm Post"
                }
              }
            }
          }
        }
      }
    },
    "/api/tools": {
      "get": {
        "summary": "List Tools",
        "description": "Get list of all available tools.",
        "operationId": "list_tools_api_tools_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response List Tools Api Tools Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/tools/{tool_name}": {
      "get": {
        "summary": "Get Tool Schema",
        "description": "Get schema for a specific tool.",
        "operationId": "get_tool_schema_api_tools__tool_name__get",
        "parameters": [
          {
            "name": "tool_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tool Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Tool Schema Api Tools  Tool Name  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/cache/health": {
      "get": {
        "summary": "Cache Health",
        "description": "Health status for the semantic cache.",
        "operationId": "cache_health_api_cache_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Cache Health Api Cache Health Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/cache/analytics": {
      "get": {
        "summary": "Cache Analytics",
        "description": "Analytics snapshot for the semantic cache.",
        "operationId": "cache_analytics_api_cache_analytics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Cache Analytics Api Cache Analytics Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/cache/clear": {
      "post": {
        "summary": "Cache Clear",
        "description": "Clear semantic cache entries. Optional body: { \"pattern\": \"substring\" }\n\nIf ADMIN_TOKEN is set, requires X-Admin-Token header.",
        "operationId": "cache_clear_api_cache_clear_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Payload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Cache Clear Api Cache Clear Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/tools/{tool_name}/execute": {
      "post": {
        "summary": "Execute Tool",
        "description": "Execute a tool with given parameters.",
        "operationId": "execute_tool_api_tools__tool_name__execute_post",
        "parameters": [
          {
            "name": "tool_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tool Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Parameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Execute Tool Api Tools  Tool Name  Execute Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/tools/analytics": {
      "get": {
        "summary": "Get Tool Analytics",
        "description": "Get comprehensive tool analytics.",
        "operationId": "get_tool_analytics_api_tools_analytics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Tool Analytics Api Tools Analytics Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/tools/analytics/{tool_name}": {
      "get": {
        "summary": "Get Tool Analytics Specific",
        "description": "Get analytics for a specific tool.",
        "operationId": "get_tool_analytics_specific_api_tools_analytics__tool_name__get",
        "parameters": [
          {
            "name": "tool_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tool Name"
            }
          },
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 7,
              "title": "Days"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Tool Analytics Specific Api Tools Analytics  Tool Name  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/tools/approvals": {
      "get": {
        "summary": "Get Pending Approvals",
        "description": "Get pending tool execution approvals.",
        "operationId": "get_pending_approvals_api_tools_approvals_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Pending Approvals Api Tools Approvals Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/tools/approvals/{approval_id}/approve": {
      "post": {
        "summary": "Approve Tool Execution",
        "description": "Approve a pending tool execution.",
        "operationId": "approve_tool_execution_api_tools_approvals__approval_id__approve_post",
        "parameters": [
          {
            "name": "approval_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Approval Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Approve Tool Execution Api Tools Approvals  Approval Id  Approve Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/tools/approvals/{approval_id}/deny": {
      "post": {
        "summary": "Deny Tool Execution",
        "description": "Deny a pending tool execution.",
        "operationId": "deny_tool_execution_api_tools_approvals__approval_id__deny_post",
        "parameters": [
          {
            "name": "approval_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Approval Id"
            }
          },
          {
            "name": "denial_reason",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Denial Reason"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Deny Tool Execution Api Tools Approvals  Approval Id  Deny Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/cache/status": {
      "get": {
        "summary": "Get Cache Status",
        "description": "Get semantic cache status and analytics.",
        "operationId": "get_cache_status_api_cache_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Cache Status Api Cache Status Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/cache/report": {
      "get": {
        "summary": "Get Cache Report",
        "description": "Get comprehensive cache performance report.",
        "operationId": "get_cache_report_api_cache_report_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Cache Report Api Cache Report Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/cache/optimize": {
      "post": {
        "summary": "Optimize Cache",
        "description": "Optimize cache settings for better performance.",
        "operationId": "optimize_cache_api_cache_optimize_post",
        "parameters": [
          {
            "name": "target_hit_rate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0.5,
              "title": "Target Hit Rate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Optimize Cache Api Cache Optimize Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/cache/warm": {
      "post": {
        "summary": "Warm Cache",
        "description": "Warm the cache with common queries.",
        "operationId": "warm_cache_api_cache_warm_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Warm Cache Api Cache Warm Post"
                }
              }
            }
          }
        }
      }
    },
    "/api/tools/health": {
      "get": {
        "summary": "Get Tools Health",
        "description": "Get health status of all tools.",
        "operationId": "get_tools_health_api_tools_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Tools Health Api Tools Health Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/tools/batch_execute": {
      "post": {
        "summary": "Batch Execute Tools",
        "description": "Execute multiple tools in sequence.",
        "operationId": "batch_execute_tools_api_tools_batch_execute_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "type": "object"
                },
                "type": "array",
                "title": "Requests"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response Batch Execute Tools Api Tools Batch Execute Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/router/set-thresholds": {
      "post": {
        "summary": "Set Router Thresholds",
        "description": "Set router confidence and support thresholds (Admin only).",
        "operationId": "set_router_thresholds_api_admin_router_set_thresholds_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object",
                "title": "Thresholds"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Set Router Thresholds Api Admin Router Set Thresholds Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/autonomy/autopromote/preview": {
      "get": {
        "summary": "Autopromote Preview",
        "operationId": "autopromote_preview_api_autonomy_autopromote_preview_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Autopromote Preview Api Autonomy Autopromote Preview Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/state": {
      "get": {
        "summary": "State",
        "operationId": "state_api_state_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response State Api State Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/train": {
      "post": {
        "summary": "Train",
        "operationId": "train_api_train_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Train Api Train Post"
                }
              }
            }
          }
        }
      }
    },
    "/api/chat": {
      "post": {
        "summary": "Chat",
        "operationId": "chat_api_chat_post",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Q"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Chat Api Chat Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/vision": {
      "post": {
        "summary": "Vision",
        "operationId": "vision_api_vision_post",
        "parameters": [
          {
            "name": "question",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Question"
            }
          },
          {
            "name": "grounding_required",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Grounding Required"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_vision_api_vision_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_vision_api_vision_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_vision_api_vision_post"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}