{{- if .Values.unifiedRuntime.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: liquid-hive-unified-runtime
  namespace: {{ .Values.namespace }}
  labels:
    app: unified-runtime
spec:
  replicas: {{ .Values.unifiedRuntime.replicas }}
  selector:
    matchLabels:
      app: unified-runtime
  template:
    metadata:
      labels:
        app: unified-runtime
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.unifiedRuntime.service.metricsPort }}"
        prometheus.io/path: '{{ default "/metrics" .Values.monitoring.serviceMonitor.path }}'
    spec:
      {{- if .Values.rbac.create }}
      serviceAccountName: liquid-hive-sa
      {{- end }}
      securityContext:
        fsGroup: {{ .Values.unifiedRuntime.securityContext.fsGroup }}
      containers:
        - name: unified-runtime
          image: "{{ .Values.unifiedRuntime.image.repository }}:{{ .Values.unifiedRuntime.image.tag }}"
          imagePullPolicy: {{ .Values.unifiedRuntime.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.unifiedRuntime.service.port }}
            - name: metrics
              containerPort: {{ .Values.unifiedRuntime.service.metricsPort }}
          env:
            {{- toYaml .Values.unifiedRuntime.env | nindent 12 }}
            {{- if .Values.unifiedRuntime.extraEnv }}
            {{- toYaml .Values.unifiedRuntime.extraEnv | nindent 12 }}
            {{- end }}
          securityContext:
            runAsNonRoot: {{ .Values.unifiedRuntime.securityContext.runAsNonRoot }}
            runAsUser: {{ .Values.unifiedRuntime.securityContext.runAsUser }}
            runAsGroup: {{ .Values.unifiedRuntime.securityContext.runAsGroup }}
            allowPrivilegeEscalation: {{ .Values.unifiedRuntime.securityContext.allowPrivilegeEscalation }}
            readOnlyRootFilesystem: {{ .Values.unifiedRuntime.securityContext.readOnlyRootFilesystem }}
            capabilities:
              drop:
                {{- toYaml .Values.unifiedRuntime.securityContext.capabilities.drop | nindent 16 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            {{- if .Values.unifiedRuntime.extraVolumeMounts }}
            {{- toYaml .Values.unifiedRuntime.extraVolumeMounts | nindent 12 }}
            {{- end }}
          readinessProbe:
            httpGet:
              path: {{ .Values.unifiedRuntime.probes.path }}
              port: http
            periodSeconds: {{ .Values.unifiedRuntime.probes.periodSeconds }}
            timeoutSeconds: {{ .Values.unifiedRuntime.probes.timeoutSeconds }}
          livenessProbe:
            httpGet:
              path: {{ .Values.unifiedRuntime.probes.path }}
              port: http
            periodSeconds: {{ .Values.unifiedRuntime.probes.periodSeconds }}
            timeoutSeconds: {{ .Values.unifiedRuntime.probes.timeoutSeconds }}
          startupProbe:
            httpGet:
              path: {{ .Values.unifiedRuntime.probes.path }}
              port: http
            initialDelaySeconds: {{ .Values.unifiedRuntime.probes.startupSeconds }}
            failureThreshold: {{ .Values.unifiedRuntime.probes.failureThreshold }}
            periodSeconds: {{ .Values.unifiedRuntime.probes.periodSeconds }}
          resources:
            {{- toYaml .Values.unifiedRuntime.resources | nindent 12 }}
      volumes:
        - name: tmp
          emptyDir: {}
        {{- if .Values.unifiedRuntime.extraVolumes }}
        {{- toYaml .Values.unifiedRuntime.extraVolumes | nindent 8 }}
        {{- end }}
{{- end }}
