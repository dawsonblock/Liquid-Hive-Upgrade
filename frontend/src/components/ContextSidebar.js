import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
import { Paper, Typography, List, ListItem, ListItemText, Divider } from '@mui/material';
const ContextSidebar = ({ context, reasoning, intent, rationale }) => {
    const docs = (context || '').split(/\n\n\[\d+\]/).filter(Boolean);
    return (_jsxs(Paper, { variant: 'outlined', sx: { p: 2.5, borderRadius: 4 }, children: [_jsx(Typography, { variant: 'overline', sx: { letterSpacing: 1.2 }, children: "Context" }), _jsx(Typography, { variant: 'h6', sx: { fontWeight: 600, mb: 1 }, children: "Awareness" }), _jsx(Typography, { variant: 'subtitle2', sx: { mt: 1 }, children: "Operator Intent" }), _jsx(Typography, { variant: 'body2', color: 'text.secondary', children: intent || 'Unknown' }), _jsx(Typography, { variant: 'subtitle2', sx: { mt: 2 }, children: "Reasoning Strategy" }), _jsx(Typography, { variant: 'body2', color: 'text.secondary', children: reasoning || 'N/A' }), rationale && (_jsxs(_Fragment, { children: [_jsx(Typography, { variant: 'subtitle2', sx: { mt: 2 }, children: "Decision Rationale" }), _jsx(Typography, { variant: 'body2', color: 'text.secondary', children: rationale })] })), _jsx(Divider, { sx: { my: 2 } }), _jsx(Typography, { variant: 'subtitle2', children: "RAG Context" }), _jsxs(List, { dense: true, children: [docs.length === 0 && (_jsx(Typography, { variant: 'body2', color: 'text.secondary', children: "No documents." })), docs.map((d, i) => (_jsx(ListItem, { children: _jsx(ListItemText, { primary: d.trim().slice(0, 120) + (d.length > 120 ? 'â€¦' : '') }) }, i)))] })] }));
};
export default ContextSidebar;
//# sourceMappingURL=ContextSidebar.js.map