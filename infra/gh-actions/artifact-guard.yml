name: Artifact Guard

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  guard:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Validate changed files
        env:
          MAX_SIZE: "5242880" # 5MB
          FORBIDDEN_REGEX: '(^|/)node_modules/|(^|/)dist/|(^|/)build/|(^|/)out/|(^|/)coverage/|(^|/)\.cache/|__pycache__/|\.py[cod]$|\.map$|\.log$|\.tsbuildinfo$|\.DS_Store$|Thumbs\.db$'
          ALLOW_LARGE_REGEX: '^docs/|^grafana/|^prometheus/|^k8s/|^helm/|^deploy/helm/|^data/|^rag_index/'
        shell: bash
        run: |
          set -euo pipefail
          git fetch origin "${{ github.base_ref }}" --depth=1 || true
          BASE="$(git merge-base "origin/${{ github.base_ref }}" HEAD)"
          echo "Base: $BASE"
          CHANGED_ALL=$(git diff --name-only "$BASE" HEAD || true)
          NEW_FILES=$(git diff --name-status --diff-filter=A "$BASE" HEAD | awk '{print $2}' || true)

          echo "Changed files:"
          echo "$CHANGED_ALL"

          # Forbidden artifact patterns in any changed file paths
          if echo "$CHANGED_ALL" | grep -E "$FORBIDDEN_REGEX" >/dev/null; then
            echo "::error::Forbidden artifacts detected in PR (matches: $FORBIDDEN_REGEX)"
            echo "$CHANGED_ALL" | grep -E "$FORBIDDEN_REGEX" || true
            exit 1
          fi

          # New files larger than MAX_SIZE unless allowed
          BAD=0
          while IFS= read -r f; do
            [ -z "$f" ] && continue
            # allowlist
            if echo "$f" | grep -E "$ALLOW_LARGE_REGEX" >/dev/null 2>&1; then
              continue
            fi
            if [ -f "$f" ]; then
              size=$(stat -c%s "$f" || echo 0)
              if [ "${size:-0}" -gt "$MAX_SIZE" ]; then
                echo "::error::New file exceeds ${MAX_SIZE} bytes: $f ($size)"
                BAD=1
              fi
            fi
          done <<< "$NEW_FILES"

          if [ "$BAD" -ne 0 ]; then
            exit 1
          fi

          echo "Artifact guard passed."
