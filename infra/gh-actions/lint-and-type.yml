name: Lint and Type Check

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  python-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
    
    - name: Run ruff linter
      run: |
        ruff check libs apps --output-format=github
    
    - name: Run ruff formatter check
      run: |
        ruff format --check libs apps
    
    - name: Run black formatter check
      run: |
        black --check libs apps
    
    - name: Run isort import sorting check
      run: |
        isort --check-only libs apps
    
    - name: Run mypy type checker
      run: |
        mypy libs apps --show-error-codes
    
    - name: Run bandit security linter
      run: |
        bandit -r libs apps -f json -o bandit-report.json
        bandit -r libs apps -f txt
    
    - name: Run safety check
      run: |
        safety check --json --output safety-report.json
        safety check

  typescript-lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'yarn'
        cache-dependency-path: apps/dashboard/yarn.lock
    
    - name: Install dependencies
      working-directory: apps/dashboard
      run: yarn install --frozen-lockfile
    
    - name: Run ESLint
      working-directory: apps/dashboard
      run: yarn lint
    
    - name: Run TypeScript compiler
      working-directory: apps/dashboard
      run: yarn type-check
    
    - name: Run Prettier check
      working-directory: apps/dashboard
      run: yarn format:check

  yaml-lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run yamllint
      uses: karancode/yamllint-github-action@v1.0.0
      with:
        yamllint_file_or_dir: '.'
        yamllint_config_filepath: '.yamllint.yml'
        yamllint_strict: true
        yamllint_comment: true

  dockerfile-lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run hadolint
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: 'infra/docker/Dockerfile.api'
        ignore: DL3008,DL3009
    
    - name: Run hadolint on dashboard Dockerfile
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: 'infra/docker/Dockerfile.dashboard'
        ignore: DL3008,DL3009