# AWS Production environment values
# Uses AWS Secrets Manager with IAM roles

replicaCount: 3

image:
  repository: your-registry/liquid-hive
  tag: "v0.1.5"

# Secrets Management - AWS Secrets Manager
secrets:
  provider: "aws-secrets-manager"
  aws:
    enabled: true
    region: "us-east-1"
    secretsPrefix: "liquid-hive/prod"
    serviceAccount:
      create: true
      annotations:
        eks.amazonaws.com/role-arn: "arn:aws:iam::123456789012:role/liquid-hive-secrets-role"
      name: "liquid-hive-secrets"

# Production configuration - will be overridden by secrets
config:
  database:
    # These are fallbacks - actual values come from AWS Secrets Manager
    mongoUrl: ""
    redisUrl: ""
    neo4jUrl: ""
  ai:
    vllmEndpoint: ""
    vllmEndpointSmall: ""
    vllmEndpointLarge: ""
    vllmApiKey: ""
  monitoring:
    prometheusBaseUrl: ""
  features:
    modelRoutingEnabled: true
    trustedAutonomyEnabled: true
    autoPromoteEnabled: true

# Production ingress
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: api.liquid-hive.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: liquid-hive-tls
      hosts:
        - api.liquid-hive.com

# Production resources
resources:
  limits:
    cpu: 4000m
    memory: 8Gi
  requests:
    cpu: 1000m
    memory: 2Gi

# Autoscaling enabled
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 20
  targetCPUUtilizationPercentage: 70

# Production storage
storage:
  enabled: true
  size: 100Gi
  storageClass: "gp3"

# Node affinity for production workloads
affinity:
  nodeAffinity:
serviceMonitor:
  enabled: true

externalSecrets:
  enabled: true
  secretStore:
    name: aws-secrets-manager
    kind: ClusterSecretStore
  # Map runtime environment variables from AWS Secrets Manager keys
  # Update the remoteRef.key paths to match your secrets layout
  data:
    MONGO_URL:
      key: liquid-hive/prod/MONGO_URL
    REDIS_URL:
      key: liquid-hive/prod/REDIS_URL
    NEO4J_URL:
      key: liquid-hive/prod/NEO4J_URL
    VLLM_ENDPOINT:
      key: liquid-hive/prod/VLLM_ENDPOINT
    VLLM_ENDPOINT_SMALL:
      key: liquid-hive/prod/VLLM_ENDPOINT_SMALL
    VLLM_ENDPOINT_LARGE:
      key: liquid-hive/prod/VLLM_ENDPOINT_LARGE
    VLLM_API_KEY:
      key: liquid-hive/prod/VLLM_API_KEY
    DEEPSEEK_API_KEY:
      key: liquid-hive/prod/DEEPSEEK_API_KEY
    DEEPSEEK_R1_API_KEY:
      key: liquid-hive/prod/DEEPSEEK_R1_API_KEY
    OPENAI_API_KEY:
      key: liquid-hive/prod/OPENAI_API_KEY
    ANTHROPIC_API_KEY:
      key: liquid-hive/prod/ANTHROPIC_API_KEY
    QWEN_API_KEY:
      key: liquid-hive/prod/QWEN_API_KEY
    PROMETHEUS_BASE_URL:
      key: liquid-hive/prod/PROMETHEUS_BASE_URL
    ADMIN_TOKEN:
      key: liquid-hive/prod/ADMIN_TOKEN
    API_JWT_PUBLIC_KEY_PATH:
      key: liquid-hive/prod/API_JWT_PUBLIC_KEY_PATH
    API_JWT_AUDIENCE:
      key: liquid-hive/prod/API_JWT_AUDIENCE
    OTEL_EXPORTER_OTLP_ENDPOINT:
      key: liquid-hive/prod/OTEL_EXPORTER_OTLP_ENDPOINT

pdb:
  enabled: true
  minAvailable: 1

networkPolicy:
  enabled: true
  # Example: allow ingress from ingress-nginx and same namespace; allow egress to common ports
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: ingress-nginx
        - podSelector: {}
  egress:
    - to:
        - namespaceSelector: {}
      ports:
        - port: 443
        - port: 80
        - port: 6379
        - port: 7687
        - port: 8000
        - port: 6333
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/instance-type
          operator: In
          values:
          - m5.large
          - m5.xlarge
          - m5.2xlarge
